<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <!-- Enterprise Test Plan Configuration -->
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Enliven AGENT Production Load Test" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">https://enliven-agent.prod</stringProp>
            <stringProp name="Argument.desc">Production endpoint</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </element>
          <elementProp name="CLIENT_CERT" elementType="Argument">
            <stringProp name="Argument.name">CLIENT_CERT</stringProp>
            <stringProp name="Argument.value">/etc/pki/tls/certs/client.pem</stringProp>
          </element>
        </collectionProp>
      </elementProp>
    </TestPlan>
    
    <!-- Industrial Security Configuration -->
    <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="mTLS Configuration" enabled="true">
      <collectionProp name="AuthManager.auth_list">
        <elementProp name="" elementType="Authorization">
          <stringProp name="Authorization.url">${BASE_URL}</stringProp>
          <stringProp name="Authorization.username"></stringProp>
          <stringProp name="Authorization.password"></stringProp>
          <stringProp name="Authorization.domain"></stringProp>
          <stringProp name="Authorization.realm"></stringProp>
          <stringProp name="Authorization.keystore">${CLIENT_CERT}</stringProp>
        </elementProp>
      </collectionProp>
    </AuthManager>
    
    <!-- Main Thread Group -->
    <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Production Workload" enabled="true">
      <intProp name="ThreadGroup.num_threads">1000</intProp>
      <intProp name="ThreadGroup.ramp_time">300</intProp>
      <longProp name="ThreadGroup.start_time">1698765432000</longProp>
      <longProp name="ThreadGroup.end_time">1698765432000</longProp>
      <boolProp name="ThreadGroup.scheduler">true</boolProp>
      <stringProp name="ThreadGroup.duration">3600</stringProp>
      <stringProp name="ThreadGroup.delay">0</stringProp>
      <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
    </ThreadGroup>
    
    <!-- Cognitive Service Workflow -->
    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cognitive Processing Flow" enabled="true">
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit Reasoning Task" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="" elementType="HTTPArgument">
              <stringProp name="Argument.name">query</stringProp>
              <stringProp name="Argument.value">optimize production schedule</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.path">/v2/cognitive/reason</stringProp>
        <stringProp name="HTTPSampler.method">POST</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">10000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
      </HTTPSamplerProxy>
    </TransactionController>
    
    <!-- Industrial Protocol Simulation -->
    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Manufacturing DB Query" enabled="true">
      <stringProp name="dataSource">FactoryDB</stringProp>
      <stringProp name="queryType">Select Statement</stringProp>
      <stringProp name="query">SELECT * FROM production_logs WHERE timestamp &gt; NOW() - INTERVAL '1 hour'</stringProp>
    </JDBCSampler>
    
    <!-- Monitoring & Analytics -->
    <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Prometheus Metrics" enabled="true">
      <elementProp name="arguments" elementType="Arguments">
        <collectionProp name="Arguments.arguments">
          <elementProp name="prometheusPort" elementType="Argument">
            <stringProp name="Argument.name">prometheusPort</stringProp>
            <stringProp name="Argument.value">9090</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="classname">kg.apc.jmeter.reporters.PrometheusListener</stringProp>
    </BackendListener>
    
    <!-- Distributed Execution Support -->
    <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Cloud Burst Pattern" enabled="true">
      <stringProp name="ModuleController.node">aws://loadtest-worker-*</stringProp>
    </ModuleController>
  </hashTree>
</jmeterTestPlan>
