# ENTERPRISE AGENT API CONFIGURATION (v3.4.0)
# NIST SP 800-204 | CNCF Best Practices

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: agents.enliven.ai
  annotations:
    api-approved.kubernetes.io: "enliven.ai/certified"
    cert-manager.io/inject-ca-from-secret: "enliven-root-ca"
spec:
  group: enliven.ai
  names:
    kind: Agent
    plural: agents
    singular: agent
    shortNames: ["agnt"]
  scope: Namespaced
  versions:
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required: [agentType, version, resources]
            properties:
              agentType:
                type: string
                enum: [cognitive, actuator, sensor, orchestrator]
                description: "Agent specialization type"
              version:
                type: string
                pattern: '^v\d+\.\d+\.\d+(-rc\d+)?$'
              resources:
                type: object
                properties:
                  requests:
                    type: object
                    properties:
                      cpu:
                        type: string
                        pattern: '^[0-9]+m$'
                      memory:
                        type: string  
                      gpu:
                        type: string
                  limits:
                    type: object
                    properties:
                      cpu:
                        type: string
                      memory:
                        type: string
                      gpu:
                        type: string
              securityProfile:
                type: object
                properties:
                  tlsVersion:
                    type: string
                    default: "1.3"
                  cipherSuites:
                    type: array
                    items:
                      type: string
                    default: ["TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256"]
              federation:
                type: object
                properties:
                  clusterID:
                    type: string
                  syncInterval:
                    type: string
                    default: "30s"

---
# Cluster-level API Gateway Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: enliven-api-gateway
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-secret: "enliven-system/proxy-cert"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
spec:
  tls:
  - hosts:
    - "agents.enliven.ai"
    secretName: enliven-tls-cert
  rules:
  - host: "agents.enliven.ai"
    http:
      paths:
      - path: /v1/agents
        pathType: Prefix
        backend:
          service:
            name: agent-orchestrator
            port:
              number: 443

---
# Distributed Tracing Configuration
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: enliven-tracing
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      batch:
        timeout: 5s
      memory_limiter:
        limit_mib: 512
    exporters:
      otlphttp:
        endpoint: "https://tempo.enliven-system.svc.cluster.local:4318"
        tls:
          insecure: false
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, memory_limiter]
          exporters: [otlphttp]

---
# Service Level Objectives (SLO) 
apiVersion: slo.enliven.ai/v1
kind: ServiceLevelObjective
metadata:
  name: agent-api-slos
spec:
  targets:
    - name: availability
      goal: 99.995%
      rollingPeriod: 30d
    - name: latency
      metric: http_request_duration_seconds
      threshold: 250ms
      goal: 99.9%
  alerting:
    receivers:
      - ops-team
      - ai-sre
    routes:
      - match:
          severity: critical
        receiver: pagerduty
